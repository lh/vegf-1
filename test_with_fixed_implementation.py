"""
Test the fixed streamgraph implementation using the new simulation data.
"""

import json
import os
import matplotlib.pyplot as plt
import pandas as pd
import numpy as np
from datetime import datetime
import sys

# Import the fixed module
sys.path.append(os.path.dirname(os.path.abspath(__file__)))
from streamlit_app.streamgraph_patient_states_fixed import extract_patient_states, aggregate_states_by_month, create_streamgraph

def load_simulation_results(file_path):
    """Load simulation results from a JSON file"""
    try:
        with open(file_path, 'r') as f:
            return json.load(f)
    except Exception as e:
        print(f"Error loading simulation results: {e}")
        return None

def run_test():
    """Run a test of the fixed streamgraph implementation"""
    # Use the same file that was generated by run_full_streamgraph_test.py
    results_file = "full_streamgraph_test_data.json"
    
    if not os.path.exists(results_file):
        print(f"Error: {results_file} not found. Run run_full_streamgraph_test.py first.")
        return False
    
    print(f"Loading simulation results from {results_file}")
    results = load_simulation_results(results_file)
    
    if not results:
        print("Failed to load simulation results")
        return False
    
    # Create streamgraph with the fixed implementation
    try:
        print("Creating streamgraph with fixed implementation...")
        fig = create_streamgraph(results)
        
        # Save the figure
        output_file = "fixed_streamgraph_test.png"
        fig.savefig(output_file, dpi=150, bbox_inches='tight')
        print(f"Fixed streamgraph saved to {output_file}")
        
        # Display interactively if possible
        try:
            plt.show()
        except Exception as e:
            print(f"Could not display plot: {e}")
        
        return True
    except Exception as e:
        print(f"Error creating streamgraph: {e}")
        import traceback
        traceback.print_exc()
        return False

if __name__ == "__main__":
    success = run_test()
    if success:
        print("Success! Test of fixed implementation complete.")
    else:
        print("Test failed.")